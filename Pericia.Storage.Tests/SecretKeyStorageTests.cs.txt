// Rename this file to SecretKeyStorageTests.cs
// Test other provider with your secret api keys

using Pericia.Storage.Aws;
using Pericia.Storage.Azure;
using Pericia.Storage.OpenStack;
using System.Threading.Tasks;
using Xunit;

namespace Pericia.Storage.Tests
{
    public class SecretKeyStorageTests : StorageTests
    {

        [Fact]
        public Task TestAzureBlobs()
        {
            var options = new AzureStorageOptions
            {
                ConnectionString = ""
            };
            var fileStorage = new AzureStorageContainer(options, "TestContainer");

            return TestStorage(fileStorage);
        }

        [Fact]
        public Task TestAwsS3()
        {
            var options = new AwsStorageOptions
            {
                AccessKey = "",
                SecretKey = "",
                ServiceUrl = ""
            };
            var fileStorage = new AwsStorageContainer(options, "TestContainer");

            return TestStorage(fileStorage);
        }

        [Fact]
        public Task TestOpenStack()
        {
            var options = new OpenStackStorageOptions
            {
                ApiEndpoint = "",
                AuthEndpoint = "",
                TenantName = "",
                UserId = "",
                Password = "",
            };
            var fileStorage = new OpenStackStorageContainer(options, "TestContainer");

            return TestStorage(fileStorage);
        }
    }
}
